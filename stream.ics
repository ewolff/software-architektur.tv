BEGIN:VCALENDAR
PRODID:-//Microsoft Corporation//Outlook 16.0 MIMEDIR//EN
VERSION:2.0
METHOD:PUBLISH
X-MS-OLK-FORCEINSPECTOROPEN:TRUE
BEGIN:VTIMEZONE
TZID:W. Europe Standard Time
BEGIN:STANDARD
DTSTART:16011028T030000
RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10
TZOFFSETFROM:+0200
TZOFFSETTO:+0100
END:STANDARD
BEGIN:DAYLIGHT
DTSTART:16010325T020000
RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=3
TZOFFSETFROM:+0100
TZOFFSETTO:+0200
END:DAYLIGHT
END:VTIMEZONE
BEGIN:VEVENT
CLASS:PUBLIC
CREATED:20250422T135246Z
DESCRIPTION:Bounded Contexts werden oft als Allheilmittel für die fachlich
	e Modularisierung von Software betrachtet – eine zentrale Herausforderun
	g bei der Entwicklung wartbarer Systeme. Allerdings ist das Konzept des 
	“Bounded Context” komplex und in der Praxis nicht immer einfach umzuse
	tzen. In dieser Episode diskutieren wir “Modelle” als Ansatz zur Ident
	ifizierung fachlicher Module. Sie sind zwar ein Bestandteil von Bounded Co
	ntexts\, können aber auch – kombiniert mit Ideen wie Modulen oder Abstr
	act Data Types – eigenständig zur fachlichen Modularisierung eingesetzt
	 werden.\n\nhttps://youtu.be/DctX0laNppE https://www.twitch.tv/ebrwolff\n
DTEND;TZID="W. Europe Standard Time":20250425T140000
DTSTAMP:20240611T190100Z
DTSTART;TZID="W. Europe Standard Time":20250425T130000
LAST-MODIFIED:20250422T135246Z
LOCATION:https://youtu.be/DctX0laNppE https://www.twitch.tv/ebrwolff
PRIORITY:5
SEQUENCE:0
SUMMARY;LANGUAGE=de:Modelle statt Bounded Contexts? Eine Alternative für f
	achlichen Modularisierung (Software Architektur im Stream)
TRANSP:OPAQUE
UID:040000008200E00074C5B7101A82E00800000000E0E4AA7842BCDA01000000000000000
	0100000008A371F0677CD83458ECB0BFA532C3B79
X-MICROSOFT-CDO-BUSYSTATUS:BUSY
X-MICROSOFT-CDO-IMPORTANCE:1
X-MS-OLK-AUTOFILLLOCATION:FALSE
END:VEVENT
END:VCALENDAR
